name: Rust

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REPORT_NAME: 'lcov.info'
  CARGO_TERM_COLOR: always
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose
  upload_coverage_report:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: >
          cargo +nightly llvm-cov
          --all-features
          --workspace
          --lcov
          --output-path "${{ env.REPORT_NAME }}"
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          files: '${{ env.REPORT_NAME }}'
          fail_ci_if_error: true
      - name: 'Checking code coverage'
        env:
          THREASHOLD: ${{ env.COVERAGE_THRESHOLD }}
        run: >
          threshold=$(($THREASHOLD)); value=$(cargo llvm-cov | awk 'END{printf "%.0f", $10}'); if [ $(("$value")) -gt $(("$threshold")) ]; then echo "Test coverage accepted"; else echo "TEST_COVERAGE_FAILED; expected: $threshold received: $value"; exit 1; fi
